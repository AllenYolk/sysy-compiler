decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @main(): i32 {
%entry:
  @a_1 = alloc i32
  store 0, @a_1
  @b_1 = alloc i32
  store 1, @b_1
  %or_1 = alloc i32
  %0 = load @a_1
  %1 = ne %0, 0
  store %1, %or_1
  br %1, %or_end_1, %or_rhs_1

%or_rhs_1:
  %2 = load @b_1
  %3 = ne %2, 0
  store %3, %or_1
  jump %or_end_1

%or_end_1:
  %4 = load %or_1
  br %4, %if_then_1, %if_else_1

%if_then_1:
  %5 = load @a_1
  %6 = load @b_1
  %7 = add %5, %6
  store %7, @a_1
  jump %if_end_1

%if_else_1:
  %or_2 = alloc i32
  %8 = load @b_1
  %9 = eq 0, %8
  %10 = ne %9, 0
  store %10, %or_2
  br %10, %or_end_2, %or_rhs_2

%or_rhs_2:
  %and_1 = alloc i32
  %11 = load @a_1
  %12 = eq 0, %11
  %13 = ne %12, 0
  store %13, %and_1
  br %13, %and_rhs_1, %and_end_1

%and_rhs_1:
  %14 = load @b_1
  %15 = ne %14, 0
  store %15, %and_1
  jump %and_end_1

%and_end_1:
  %16 = load %and_1
  %17 = ne %16, 0
  store %17, %or_2
  jump %or_end_2

%or_end_2:
  %18 = load %or_2
  store %18, @a_1
  jump %if_end_1

%if_end_1:
  %19 = load @a_1
  ret %19
}
 