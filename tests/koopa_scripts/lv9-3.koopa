global @n_1 = alloc i32, zeroinit
 
decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @QuickSort(%0: *i32, %1: i32, %2: i32): i32 {
%entry_1:
  @arr_1 = alloc *i32
  store %0, @arr_1
  @low_1 = alloc i32
  store %1, @low_1
  @high_1 = alloc i32
  store %2, @high_1
  %3 = load @low_1
  %4 = load @high_1
  %5 = lt %3, %4
  br %5, %if_then_1, %if_else_1

%if_then_1:
  @i_1 = alloc i32
  %6 = load @low_1
  store %6, @i_1
  @j_1 = alloc i32
  %7 = load @high_1
  store %7, @j_1
  @k_1 = alloc i32
  %8 = load @low_1
  %9 = load @arr_1
  %array_ptr_1 = getptr %9, %8
  %10 = load %array_ptr_1
  store %10, @k_1
  jump %while_entry_1

%while_entry_1:
  %11 = load @i_1
  %12 = load @j_1
  %13 = lt %11, %12
  br %13, %while_body_1, %while_end_1

%while_body_1:
  jump %while_entry_2

%while_entry_2:
  %and_1 = alloc i32
  %14 = load @i_1
  %15 = load @j_1
  %16 = lt %14, %15
  %17 = ne %16, 0
  store %17, %and_1
  br %17, %and_rhs_1, %and_end_1

%and_rhs_1:
  %18 = load @j_1
  %19 = load @arr_1
  %array_ptr_2 = getptr %19, %18
  %20 = load %array_ptr_2
  %21 = load @k_1
  %22 = sub %21, 1
  %23 = gt %20, %22
  %24 = ne %23, 0
  store %24, %and_1
  jump %and_end_1

%and_end_1:
  %25 = load %and_1
  br %25, %while_body_2, %while_end_2

%while_body_2:
  %26 = load @j_1
  %27 = sub %26, 1
  store %27, @j_1
  jump %while_entry_2

%while_end_2:
  %28 = load @i_1
  %29 = load @j_1
  %30 = lt %28, %29
  br %30, %if_then_2, %if_else_2

%if_then_2:
  %31 = load @i_1
  %32 = load @arr_1
  %array_ptr_3 = getptr %32, %31
  %33 = load @j_1
  %34 = load @arr_1
  %array_ptr_4 = getptr %34, %33
  %35 = load %array_ptr_4
  store %35, %array_ptr_3
  %36 = load @i_1
  %37 = add %36, 1
  store %37, @i_1
  jump %if_end_2

%if_else_2:
  jump %if_end_2

%if_end_2:
  jump %while_entry_3

%while_entry_3:
  %and_2 = alloc i32
  %38 = load @i_1
  %39 = load @j_1
  %40 = lt %38, %39
  %41 = ne %40, 0
  store %41, %and_2
  br %41, %and_rhs_2, %and_end_2

%and_rhs_2:
  %42 = load @i_1
  %43 = load @arr_1
  %array_ptr_5 = getptr %43, %42
  %44 = load %array_ptr_5
  %45 = load @k_1
  %46 = lt %44, %45
  %47 = ne %46, 0
  store %47, %and_2
  jump %and_end_2

%and_end_2:
  %48 = load %and_2
  br %48, %while_body_3, %while_end_3

%while_body_3:
  %49 = load @i_1
  %50 = add %49, 1
  store %50, @i_1
  jump %while_entry_3

%while_end_3:
  %51 = load @i_1
  %52 = load @j_1
  %53 = lt %51, %52
  br %53, %if_then_3, %if_else_3

%if_then_3:
  %54 = load @j_1
  %55 = load @arr_1
  %array_ptr_6 = getptr %55, %54
  %56 = load @i_1
  %57 = load @arr_1
  %array_ptr_7 = getptr %57, %56
  %58 = load %array_ptr_7
  store %58, %array_ptr_6
  %59 = load @j_1
  %60 = sub %59, 1
  store %60, @j_1
  jump %if_end_3

%if_else_3:
  jump %if_end_3

%if_end_3:
  jump %while_entry_1

%while_end_1:
  %61 = load @i_1
  %62 = load @arr_1
  %array_ptr_8 = getptr %62, %61
  %63 = load @k_1
  store %63, %array_ptr_8
  @tmp_1 = alloc i32
  %64 = load @i_1
  %65 = sub %64, 1
  store %65, @tmp_1
  %66 = load @arr_1
  %67 = getptr %66, 0
  %68 = load @low_1
  %69 = load @tmp_1
  %70 = call @QuickSort(%67, %68, %69)
  store %70, @tmp_1
  %71 = load @i_1
  %72 = add %71, 1
  store %72, @tmp_1
  %73 = load @arr_1
  %74 = getptr %73, 0
  %75 = load @tmp_1
  %76 = load @high_1
  %77 = call @QuickSort(%74, %75, %76)
  store %77, @tmp_1
  jump %if_end_1

%if_else_1:
  jump %if_end_1

%if_end_1:
  ret 0
}
 
fun @main(): i32 {
%entry_2:
  store 10, @n_1
  @a_1 = alloc [i32, 10]
  %array_ptr_9 = getelemptr @a_1, 0
  store 4, %array_ptr_9
  %array_ptr_10 = getelemptr @a_1, 1
  store 3, %array_ptr_10
  %array_ptr_11 = getelemptr @a_1, 2
  store 9, %array_ptr_11
  %array_ptr_12 = getelemptr @a_1, 3
  store 2, %array_ptr_12
  %array_ptr_13 = getelemptr @a_1, 4
  store 0, %array_ptr_13
  %array_ptr_14 = getelemptr @a_1, 5
  store 1, %array_ptr_14
  %array_ptr_15 = getelemptr @a_1, 6
  store 6, %array_ptr_15
  %array_ptr_16 = getelemptr @a_1, 7
  store 5, %array_ptr_16
  %array_ptr_17 = getelemptr @a_1, 8
  store 7, %array_ptr_17
  %array_ptr_18 = getelemptr @a_1, 9
  store 8, %array_ptr_18
  @i_2 = alloc i32
  store 0, @i_2
  @tmp_2 = alloc i32
  store 9, @tmp_2
  %78 = getelemptr @a_1, 0
  %79 = load @i_2
  %80 = load @tmp_2
  %81 = call @QuickSort(%78, %79, %80)
  store %81, @i_2
  jump %while_entry_4

%while_entry_4:
  %82 = load @i_2
  %83 = load @n_1
  %84 = lt %82, %83
  br %84, %while_body_4, %while_end_4

%while_body_4:
  @tmp_3 = alloc i32
  %85 = load @i_2
  %array_ptr_19 = getelemptr @a_1, %85
  %86 = load %array_ptr_19
  store %86, @tmp_3
  %87 = load @tmp_3
  call @putint(%87)
  store 10, @tmp_3
  %88 = load @tmp_3
  call @putch(%88)
  %89 = load @i_2
  %90 = add %89, 1
  store %90, @i_2
  jump %while_entry_4

%while_end_4:
  ret 0
}
 